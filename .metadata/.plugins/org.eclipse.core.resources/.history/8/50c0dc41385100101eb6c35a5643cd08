package com.tienda.serviceImpl;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.tienda.entity.DetallePedido;
import com.tienda.entity.DetallePedidoId;
import com.tienda.repository.DetallePedidoRepository;
import com.tienda.service.DetallePedidoService;

@Service
public class DetallePedidoServiceImpl implements DetallePedidoService{

	  private final DetallePedidoRepository detallePedidoRepository;

	    public DetallePedidoServiceImpl(DetallePedidoRepository detallePedidoRepository) {
	        this.detallePedidoRepository = detallePedidoRepository;
	    }
	
	@Override
	public DetallePedido guardar(DetallePedido detalle) {
		return detallePedidoRepository.save(detalle);
	}

	@Override
	public DetallePedido buscarPorId(DetallePedidoId id) {
		return detallePedidoRepository.findById(id)
					.orElseThrow(() -> new RuntimeException("Detalle no encontrado: " + id));
	}

	//listar paginas
	@Override
	public Page<DetallePedido> listarPaginado(int numeroPagina, int tamanioPagina) {
		Pageable pageable = PageRequest.of(numeroPagina, tamanioPagina);
		return detallePedidoRepository.findAll(pageable);
	}

	//buscador con filtro
	@Override
	public Page<DetallePedido> buscarTodosPorFiltro(String filtro, int pagina, int tamanio) {
		Pageable pageable = PageRequest.of(pagina, tamanio);
		return detallePedidoRepository.buscarTodosPorFiltro(filtro, pageable);
	}

	@Override
	public long contadorDetallePedido(String filtro) {
		return detallePedidoRepository.contadorDetallePedido(filtro);
	}

	//eliminar
	@Override
	void eliminar(int idDetallePedido) {
		detallePedidoRepository.deleteById(idDetallePedido);
		
	}
	
	
	
}

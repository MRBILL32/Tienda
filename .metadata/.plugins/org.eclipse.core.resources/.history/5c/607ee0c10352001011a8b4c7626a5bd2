package com.tienda.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.tienda.entity.DetallePedido;
import com.tienda.entity.Producto;
import com.tienda.entity.Usuario;
import com.tienda.service.CategoriaService;
import com.tienda.service.DetallePedidoService;
import com.tienda.service.ProductoService;

import jakarta.servlet.http.HttpSession;

@Controller
@RequestMapping("/cliente")
public class ClienteController {
	
	@Autowired
	private ProductoService productoService;
	
	@Autowired
	private CategoriaService categoriaService;
	
	@Autowired
	private DetallePedidoService detallePedidoService;
	
	// Listar todas las vistas 
	@GetMapping("/inicio")
	public String dashboard(@RequestParam(value = "seccion", defaultValue = "productos") String seccion,
                        // productos
                        @RequestParam(value = "filtroProducto", required = false) String filtroProducto,
                        @RequestParam(value = "pageProducto", defaultValue = "1") int paginaProducto,
                        // detalle pedido
                        @RequestParam(value = "filtroDetallePedido", required = false) String filtroDetallePedido,
                        @RequestParam(value = "pageDetallePedido", defaultValue = "1") int paginaDetallePedido,
                        @RequestParam(value = "size", defaultValue = "8") int tamanio,
                        Model model, HttpSession session) {

    if (seccion.equals("productos")) {
        Page<Producto> productosPage = (filtroProducto == null || filtroProducto.isBlank())
                ? productoService.listarPaginado(paginaProducto - 1, tamanio)
                : productoService.buscarTodosPorFiltro(filtroProducto, paginaProducto - 1, tamanio);

        model.addAttribute("productos", productosPage.getContent());
        model.addAttribute("filtroProducto", filtroProducto);
        model.addAttribute("paginaActualProducto", paginaProducto);
        model.addAttribute("totalPaginasProducto", productosPage.getTotalPages());
        model.addAttribute("totalProductos", productosPage.getTotalElements());
    }

    if (seccion.equals("detallePedidos")) {
        Page<DetallePedido> detallePedidosPage = (filtroDetallePedido == null || filtroDetallePedido.isBlank())
                ? detallePedidoService.buscarTodosPorFiltro("", paginaDetallePedido - 1, tamanio)
                : detallePedidoService.buscarTodosPorFiltro(filtroDetallePedido, paginaDetallePedido - 1, tamanio);

        model.addAttribute("detallePedidos", detallePedidosPage.getContent());
        model.addAttribute("filtroDetallePedido", filtroDetallePedido);
        model.addAttribute("paginaActualDetallePedido", paginaDetallePedido);
        model.addAttribute("totalPaginasDetallePedido", detallePedidosPage.getTotalPages());
        model.addAttribute("totalDetallePedido", detallePedidosPage.getTotalElements());
    }

    return "/cliente/inicio";
	}

}
